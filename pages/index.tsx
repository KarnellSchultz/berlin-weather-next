import React, { useState } from "react";
import Head from "next/head";
import { useQuery } from "react-query";
import { getWeather } from "../lib/service";

const API_KEY = process.env.API_KEY;

// const BASE_URL = `http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${API_KEY}`;

// const fetchWeather = async (cityName) => {
//   const resp = await fetch(
//     `http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${process.env.API_KEY}`
//   );
//   if (!resp.ok) {
//     throw new Error("Network response was not ok");
//   }
//   const data = await resp.json();
//   return data;
// };

type HomeProps = {
  API_KEY?: string;
};

export default function Home({ API_KEY }: HomeProps) {
  const [input, setInput] = useState("tampa");
  const [cityName, setCityName] = useState("");

  const {
    isLoading,
    isError,
    data: cityData,
    refetch,
    isFetching,
  } = useQuery(["citiesList"], () =>
    fetch(`/api/cities?city=${input}`).then((d) => d.json())
  );

  const { data: weatherData, refetch: refetchWeather } = useQuery(
    ["weather", cityName],
    () => getWeather(cityName, API_KEY)
  );

  React.useEffect(() => {
    refetchWeather();
  }, [cityName]);

  if (isLoading) {
    return <span>Loading...</span>;
  }

  if (isError) {
    return <span>Error: {error.message}</span>;
  }

  return (
    <div className="h-screen bg-green-100">
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <h2>Berlin Weather</h2>
      <input
        type="text"
        className="p-2 border-2 shadow-md"
        onChange={(e) => setInput(e.target.value)}
        value={input}
      />
      <button
        className="bg-gray-300 p-2 shadow-md rounded-md"
        type="button"
        onClick={() => refetch()}
      >
        Click
      </button>

      {isFetching && (
        <div className="lds-ripple">
          <div></div>
          <div></div>
        </div>
      )}

      {cityData &&
        cityData.citiesList.map((el) => (
          <li key={el.id}>
            <div>{el.name}</div>
            <div>{el.country}</div>
            {/* <div>{el.weather[0].main}</div> */}
            <button
              className="p-3 bg-green-600 rounded-2xl"
              onClick={() => setCityName(el.name)}
            >
              Click
            </button>
          </li>
        ))}

      <section>
        <h3>Weather info central!</h3>
        {weatherData && (
          <>
            <div>{weatherData.name}</div>
            <div>{weatherData.country}</div>
            <div>{weatherData.timezone}</div>
            <div>{weatherData.main.humidity}</div>
          </>
        )}
      </section>
    </div>
  );
}

export async function getStaticProps() {
  return {
    props: {
      API_KEY: process.env.API_KEY,
    },
  };
}
